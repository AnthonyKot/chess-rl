name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: Compile Kotlin metadata
      run: ./gradlew compileKotlinMetadata
    
    - name: Run verification script
      run: ./verify-build.sh
    
    # Only run native tests on macOS with Xcode available
    - name: Run native tests (macOS only)
      if: runner.os == 'macOS'
      run: |
        if xcode-select -p &> /dev/null; then
          echo "Xcode found, running native tests..."
          ./gradlew nativeTest
        else
          echo "Xcode not found, skipping native tests"
          echo "This is expected in CI environments without Xcode"
        fi
    
    # Run JVM tests if available (chess-engine has JVM target)
    - name: Run JVM tests
      run: |
        if ./gradlew tasks --all | grep -q "jvmTest"; then
          echo "Running JVM tests..."
          ./gradlew jvmTest
        else
          echo "No JVM tests found, skipping"
        fi
    
    - name: Build native binaries (macOS only)
      if: runner.os == 'macOS'
      run: |
        if xcode-select -p &> /dev/null; then
          echo "Building native binaries..."
          ./gradlew nativeBinaries
        else
          echo "Xcode not found, skipping native binary build"
        fi
    
    - name: Upload build artifacts
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v3
      with:
        name: native-binaries-${{ matrix.os }}
        path: |
          **/build/bin/native/
          **/build/bin/debugExecutable/
        if-no-files-found: ignore

  build-validation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Validate project structure
      run: |
        echo "Validating project structure..."
        for module in nn-package chess-engine rl-framework integration; do
          if [ -d "$module" ]; then
            echo "✓ $module module exists"
          else
            echo "✗ $module module missing"
            exit 1
          fi
        done
    
    - name: Compile all metadata
      run: ./gradlew compileKotlinMetadata
    
    - name: Check dependencies
      run: ./gradlew dependencies
    
    - name: Validate neural network implementation
      run: |
        echo "Validating neural network implementation..."
        ./gradlew :nn-package:compileKotlinMetadata
        ./gradlew :nn-package:metadataMainClasses
        echo "✓ Neural network implementation validated"