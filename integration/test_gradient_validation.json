# Neural Network Model
## Configuration
input_size=5
output_size=3
hidden_layers=4
activation_functions=relu,relu
loss_function=HuberLoss
optimizer=SGD
learning_rate=0.01
## Weights
layer_0=Dense
layer_0_input_size=5
layer_0_output_size=4
layer_0_activation=relu
layer_0_weights_start
0.901564341702883,1.0048805565814094,-0.9727825937619653,0.6393187637733484,0.555459732438357
0.20112409540934242,-0.369490322924136,-0.8433073298866474,-0.18181117320470994,-0.011428218586056041
-0.6616904017542257,-0.4587058176236694,0.4950250001481746,0.7665909958583669,0.3052575942293999
0.04219219906073111,-0.5680712387983011,-0.3490015656897772,-0.21827937377471665,-0.8027985572800947
layer_0_weights_end
layer_0_biases=0.0,0.0,0.0,0.0
layer_1=Dense
layer_1_input_size=4
layer_1_output_size=3
layer_1_activation=relu
layer_1_weights_start
0.08699522802499493,-0.3138209908672985,0.9533379408164356,-0.13575799775499775
0.4287018154480563,-0.04864353892071844,-0.3280943391687963,0.15965205738191587
-0.024432567960383986,1.4980590871332655,0.046823657357512094,0.011659001441984488
layer_1_weights_end
layer_1_biases=0.0,0.0,0.0
